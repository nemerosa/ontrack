# Docker Compose file used for a quick start

version: "3.1"

services:

  # Ontrack container
  ontrack:
    image: nemerosa/ontrack:${ONTRACK_VERSION:-latest}
    restart: always
    environment:
      PROFILE: prod
      JAVA_OPTIONS: "${JAVA_OPTIONS:--Xms1024m -Xmx1024m}"
      # Database
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres/ontrack"
      # Elasticsearch
      SPRING_ELASTICSEARCH_URIS: "http://elasticsearch:9200"
      # Rabbit MQ
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_USERNAME: ontrack
      SPRING_RABBITMQ_PASSWORD: ontrack
    depends_on:
      postgres:
        condition: service_started
      elasticsearch:
        condition: service_started
      rabbit:
        condition: service_started
      keycloak:
        condition: service_started
    volumes:
      - "ontrack_data:/var/ontrack/data"
    ports:
      - "8080:8080"
      - "8800:8800"

  # Ontrack UI
  ui:
    image: "nemerosa/ontrack-ui:${ONTRACK_VERSION:-latest}"
    restart: always
    environment:
      ONTRACK_URL: http://ontrack:8080
      NEXTAUTH_SECRET: f813706eb889ac9349b7127cfe8effdfdd11f847c64f4fb321e6c933079781e7
      NEXTAUTH_URL: http://localhost:3000

      NEXTAUTH_ISSUER: http://keycloak:8080/realms/ontrack
      NEXTAUTH_CLIENT_ID: ontrack-client
      NEXTAUTH_CLIENT_SECRET: ontrack-client-secret
    depends_on:
      ontrack:
        condition: service_started
      keycloak:
        condition: service_started
    ports:
      - "3000:3000"

  # Postgresql database
  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: ontrack
      POSTGRES_USER: ontrack
      POSTGRES_PASSWORD: ontrack
    volumes:
      - "ontrack_postgres:/var/lib/postgresql/data"

  # ElasticSearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    restart: always
    environment:
      - "discovery.type=single-node"
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "ontrack_elasticsearch:/usr/share/elasticsearch/data"

  # Rabbit MQ
  rabbit:
    image: rabbitmq:3.13.7-management
    restart: always
    hostname: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: ontrack
      RABBITMQ_DEFAULT_PASS: ontrack
    ports:
      - "15672:15672"
      - "5672:5672"

  postgresql-keycloak:
    image: postgres:17
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "6543:6543"
    volumes:
      - ontrack_keycloak_postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgresql-keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: http://localhost:8008
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
    ports:
      - "8008:8080"
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      postgresql-keycloak:
        condition: service_started

volumes:
  ontrack_postgres:
  ontrack_elasticsearch:
  ontrack_data:
  ontrack_keycloak_postgres_data:
