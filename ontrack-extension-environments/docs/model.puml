@startuml

class Environment {
    id: String <<generated>>
    name: String
    order: Int
    description: String?
}

class Slot {
    id: String <<generated>>
    description: String?
    qualifier: String?
    ---
    /candidateBuild: Build?
    /deployedBuild: Build?
}

class Project <<core>> #FCC
class Build <<core>> #FCC

Slot -> Environment: environment
Slot -down-> Project: project

Project <.up. Build

class SlotAdmissionRuleConfig {
    id: String <<generated>>
    name: String
    description: String?
    ruleId: String
    ruleConfig: JSON
}

interface SlotAdmissionRule {
    ruleId: String
    isBuildEligible(build: Build): Boolean
}

class SlotPipeline {
    id: String <<generated>>
    start: Date
    end: Date?
    status: SlotPipelineStatus
}

enum SlotPipelineStatus {
    ONGOING
    CANCELLED
    DEPLOYING
    ERROR
    DEPLOYED
}

SlotPipeline --> Build: build
SlotPipeline --> Slot: slot
SlotPipeline .up.> SlotPipelineStatus

class SlotPipelineChange {
    timestamp: Date
    author: String
    status: SlotPipelineStatus?
    message: String?
}

SlotPipelineChange --> SlotPipeline: pipeline

class SlotPipelineAdmissionRuleStatus {
    id: String <<generated>>
    status: JSON?
}

SlotPipelineAdmissionRuleStatus --> SlotPipeline: pipeline
SlotPipelineAdmissionRuleStatus --> SlotAdmissionRuleConfig: config

Slot *--> SlotAdmissionRuleConfig: rules[]

SlotAdmissionRuleConfig ..> SlotAdmissionRule

@enduml
